server:
  port: 8080

spring:
  application:
    name: resource-service
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format-sql: 'true'
    hibernate:
      ddl-auto: create-drop
    show-sql: 'true'
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  kafka:
    producer:
      bootstrap-servers: ${KAFKA-HOST}
  sql:
    init:
      mode: always

config:
  aws:
    region: us-east-1
    s3:
      bucket-name: resources
      url: http://localhost:4566
      access-key: localstack
      secret-key: localstack

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
