server:
  port: 8083

spring:
  application:
    name: storage-service
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format-sql: 'true'
    hibernate:
      ddl-auto: create-drop
    show-sql: 'true'
  sql:
    init:
      mode: always
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8085/auth/realms/Storage
          jwk-set-uri: http://keycloak:8085/auth/realms/Storage/protocol/openid-connect/certs

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
